Usage:
    Good if iterations is to be done 
    with all elements, if #elements is dynamic
    (but not easy to fetch)

A linked list is a sequence of data structures,
which are connected together via links.

Each link contains a connection to another link.

A linked list is the second most-used data 
structure after array.

Since it contains a link to the next node, 
the size is dynamic

It starts at the beginning (Simple linked list) and steps forward

Double linked link steps (Steps forward and backward)

Circular linked list steps (last element has a link to first)

Advantages:
- Quick insertion
- Quick deletion

Disadvantages:
- Slow search

Basic operations:
- insertion (beginning)
- deletion (beginning)
- display (shows complete list)
- search (using given key)
- delete (using given key)

Insert:
    New node points to its (suppose-to-be) right node,
    then the left-node points to the new one instead.
    (1)

Remove:
    Point left to right (LeftNode.next -> TargetNode.next), point current to 0
    Point target to 0,
    deallocate the memory of it
    (1)
